We have an array of objects representing different people in our contacts lists.

A lookUpProfile function that takes firstName and a property (prop) as arguments has been pre-written for you.

The function should check if firstName is an actual contact's firstName and the given property (prop) is a property of that contact.

If both are true, then return the "value" of that property.

If firstName does not correspond to any contacts then return "No such contact"

If prop does not correspond to any valid properties then return "No such property"

Run tests (ctrl + enter)

"Kristian", "lastName" should return "Vos"
"Sherlock", "likes" should return ["Intriguing Cases", "Violin"]
"Harry","likes" should return an array
"Bob", "number" should return "No such contact"
"Akira", "address" should return "No such property"


//Setup
var contacts = [
    {
        "firstName": "Akira",
        "lastName": "Laine",
        "number": "0543236543",
        "likes": ["Pizza", "Coding", "Brownie Points"]
    },
    {
        "firstName": "Harry",
        "lastName": "Potter",
        "number": "0994372684",
        "likes": ["Hogwarts", "Magic", "Hagrid"]
    },
    {
        "firstName": "Sherlock",
        "lastName": "Holmes",
        "number": "0487345643",
        "likes": ["Intriguing Cases", "Violin"]
    },
    {
        "firstName": "Kristian",
        "lastName": "Vos",
        "number": "unknown",
        "likes": ["Javascript", "Gaming", "Foxes"]
    }
];


function lookUpProfile(firstName, prop){
// Only change code below this line
  for (i = 0; i < contacts.length; i ++) {
    
      if (contacts[i].firstName == firstName && contacts[i][prop] !== undefined ){
      return contacts[i][prop];  
      }
 
      else if (contacts[i].firstName == firstName && contacts[i][prop] === undefined) {
        return "No such property";
      }    
    
     //    else {
    //   return "No such contact";
   }
    
    return "No such contact";
}
  
// Only change code above this line


// Change these values to test your function
lookUpProfile("Bob", "number");
//lookUpProfile("Akira", "likes");


//以下是最优 答案：
Basic Code Solution:
for (var x = 0; x < contacts.length; x++){
    if (contacts[x].firstName === firstName) {
        if (contacts[x].hasOwnProperty(prop)) {
            return contacts[x][prop];
        } else {
            return "No such property";
        }
    }
}
return "No such contact";
Code Explanation:

The for loop runs, starting at the first object in the contacts list.
If the firstName parameter passed into the function matches the value of the "firstName" key in the first object, the if statement passes.
Then, we use .hasOwnProperty() method (checks if there's a given property and returns a boolean) with prop as an argument. If it's true, the value of prop is returned.
If the second if statement fails, No such property is returned.
If the first if statement fails, the for loop continues on to the next object in the contacts list.
If the firstName parameter isn't matched by the final contacts object, the for loop exits and No such contact is returned.
Example Run

lookUpProfile("Akira","likes"); runs.
"Akira" is matched to the "firstName" key in the first object, so the if statement returns true.
"likes" is found within the first object, so the second if statement returns true.
The value of "likes" is returned - "Pizza", "Coding", "Brownie Points".
:clipboard: NOTES FOR CONTRIBUTIONS:
:warning: DO NOT add solutions that are similar to any existing solutions. If you think it is similar but better, then try to merge (or replace) the existing similar solution.
Add an explanation of your solution.
Categorize the solution in one of the following categories — Basic, Intermediate and Advanced. :traffic_light:
Please add your username only if you have added any relevant main contents. (:warning: DO NOT remove any existing usernames)
See :point_right: Wiki Challenge Solution Template for reference.
